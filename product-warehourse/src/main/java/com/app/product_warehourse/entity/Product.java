package com.app.product_warehourse.entity;

import jakarta.persistence.*;
import lombok.*;
import lombok.experimental.FieldDefaults;

@Builder                 // T·∫°o builder pattern gi√∫p t·∫°o ƒë·ªëi t∆∞·ª£ng d·ªÖ d√†ng, linh ho·∫°t
@Entity                  // ƒê√°nh d·∫•u class n√†y l√† entity, √°nh x·∫° t·ªõi b·∫£ng trong DB
@Data                    // T·ª± sinh getter, setter, toString, equals, hashCode
@NoArgsConstructor       // T·∫°o constructor kh√¥ng tham s·ªë (m·∫∑c ƒë·ªãnh)
@AllArgsConstructor      // T·∫°o constructor v·ªõi t·∫•t c·∫£ c√°c tham s·ªë
@Table(name = "product") // ƒê·∫∑t t√™n b·∫£ng trong DB l√† "product"
@FieldDefaults(level = AccessLevel.PRIVATE) // M·∫∑c ƒë·ªãnh c√°c bi·∫øn th√†nh private, kh√¥ng c·∫ßn khai b√°o ri√™ng
public class Product {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "product_id", length = 255)
    private Long productId;

    @Column(name = "product_name", length = 255)
    private String productName;

    @Column(name = "image", length = 255)
    private String image;

        @ManyToOne
        @JoinColumn(name = "origin") // üëà √°nh x·∫° c·ªôt origin (ki·ªÉu String ch·ª©a ID)
        private Origin origin;

    @Column(name = "processor", length = 255)
    private String processor;

    @Column(name = "battery")
    private Integer battery;

    @Column(name = "screen_size")
    private Double screenSize;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "operating_system")
    private OperatingSystem operatingSystem;

    @Column(name = "chipset")
    private Integer chipset;

    @Column(name = "rear_camera", length = 255)
    private String rearCamera;

    @Column(name = "front_camera", length = 255)
    private String frontCamera;

    @Column(name = "warranty_period")
    private Integer warrantyPeriod;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "brand")
    private Brand brand;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "warehouse_area")
    private WarehouseArea warehouseArea;

    @Column(name = "stock_quantity")
    private Integer stockQuantity;

    @Column(name = "status")
    private Boolean status;
}
